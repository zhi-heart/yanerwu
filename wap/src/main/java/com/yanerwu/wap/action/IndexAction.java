package com.yanerwu.wap.action;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.yanerwu.common.Page;
import com.yanerwu.entity.BookDetail;
import com.yanerwu.entity.BookSummary;
import com.yanerwu.wap.service.BlogService;
import com.yanerwu.wap.service.BookDetailService;
import com.yanerwu.wap.service.BookSummaryService;
import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.math.NumberUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.HashMap;
import java.util.Map;

/**
 * @Author Zuz
 * @Date 2017/5/8 11:25
 * @Description
 */
@Controller
public class IndexAction extends BaseAction {

    protected Logger logger = LoggerFactory.getLogger(getClass());
    @Autowired
    private BookSummaryService bookSummaryService;
    @Autowired
    private BookDetailService bookDetailService;
    @Autowired
    private BlogService blogService;

    /**
     * 首页
     *
     * @param bookSummary
     * @param page
     * @return
     */
    @RequestMapping("/index.html")
    public String index(BookSummary bookSummary, Page page) {
        request.setAttribute("page", bookSummaryService.findPage(bookSummary, page));
        return "index";
    }

    /**
     * 列表页
     *
     * @param bookId
     * @return
     */
    @RequestMapping(value = "/book/{bookId}.html", method = RequestMethod.GET)
    public String infoShow(
            @PathVariable("bookId") Long bookId,
            Page page,
            @RequestParam(defaultValue = "no") String orderField,
            @RequestParam(defaultValue = "desc") String orderDirection
    ) {
        attribute();

        BookDetail bd = new BookDetail();
        bd.setBookId(bookId);

        page.setOrderField(orderField);
        page.setOrderDirection(orderDirection);

        bookDetailService.findPage(bd, page);

        //获取书本信息
        BookSummary bookSummary = bookSummaryService.getById(new BookSummary(bookId));
        request.setAttribute("bookName", bookSummary.getName());

        request.setAttribute("page", page);
        return "/BookDetail/list";
    }

    /**
     * 列表页 - 无线滚动翻页
     *
     * @param bookDetail
     * @param page
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "/book/json-list.html")
    public String jsonList(BookDetail bookDetail, Page page) {
        if (null == bookDetail.getBookId()) {
            logger.error("bookId 为空");
            return null;
        }
        if (StringUtils.isBlank(page.getOrderDirection())) {
            page.setOrderField("no");
            page.setOrderDirection("desc");
        }
        String result = JSON.toJSONString(bookDetailService.findPage(bookDetail, page).getResult());
        return result;
    }

    /**
     * 内容页
     *
     * @param bookId
     * @param no
     */
    @RequestMapping(value = "/book/{bookId}/{no}.html")
    public String info(
            @PathVariable("bookId") Long bookId,
            @PathVariable("no") Integer no
    ) {
        BookDetail bookDetail = new BookDetail();
        bookDetail.setBookId(bookId);
        bookDetail.setNo(no);

        bookDetail = bookDetailService.findBookDetail(bookDetail);

        if (StringUtils.isBlank(bookDetail.getContent())) {
            bookDetail.setContent("暂无更新,请稍后再试,么么哒");
        }
        request.setAttribute("entity", bookDetail);

        //获取书本信息
        BookSummary bookSummary = bookSummaryService.getById(new BookSummary(bookId));
        request.setAttribute("bookName", bookSummary.getName());

        return "/BookDetail/info";
    }

    @RequestMapping(value = "/blog/{uuid}.html")
    public String info(
            @PathVariable("uuid") String uuid
    ) {
        request.setAttribute("entity", blogService.getBlogByUuid(uuid));
        return "/Blog/info";
    }

    @ResponseBody
    @RequestMapping(value = "/ip.html")
    public String ip() {
        return request.getRemoteAddr();
    }

    @ResponseBody
    @RequestMapping(value = "/mcc.html")
    public String mcc(@RequestBody String mcc) {
        String result = "";
        if (StringUtils.isBlank(mcc)) {
            result = "不能为空!";
        } else if (!NumberUtils.isCreatable(mcc)) {
            result = "输入不正确,mcc应为倒数第8位-第4位";
        } else {
            String s = mccMap.get(mcc);
            if (StringUtils.isBlank(s)) {
                result = "未匹配";
            }
        }

        return result;
    }

    static Map<Integer, String> mccMap = new HashMap<>();
    static {
        JSONObject jsonObject = JSON.parseObject("{\"0742\": \"兽医服务\", \"0763\": \"农业合作社\", \"1520\": \"总承包商—民用和商业建筑\", \"1711\": \"空调、供暖、管道设备服务\", \"1731\": \"电子服务\", \"1740\": \"石工、石雕、瓷砖安装、粉刷与绝缘承包服务\", \"1750\": \"木匠服务\", \"1761\": \"屋顶、壁板、金属片安装\", \"1771\": \"混凝土工程\", \"1799\": \"合同商—未包括在其他类别之中的\", \"2741\": \"各式各样的出版和印刷服务\", \"2791\": \"排版、制版及相关服务\", \"2842\": \"专业清洁、磨光和卫生配制品\", \"4111\": \"运输——郊区或地方上乘客的往还服务，包括摆渡\", \"4112\": \"铁路——客运\", \"4119\": \"救护车服务\", \"4121\": \"豪华轿车与出租车\", \"4131\": \"公共汽车\", \"4215\": \"快递服务——航空、地面，货物运送\", \"4411\": \"轮船、巡航\", \"4457\": \"船只租赁\", \"4511\": \"航空公司\", \"4722\": \"旅游公司和旅游线经营商\", \"4784\": \"通行费、桥梁费\", \"4789\": \"运输服务——上述类别之外的\", \"4812\": \"电信设备及电话销售\", \"4813\": \"键盘登录式电信运营商\", \"4814\": \"电信服务，包括市话和长途电话、信用卡电话、磁卡电话和传真电话业务等\", \"4815\": \"每月电话汇总清账\", \"4816\": \"计算机网络/信息服务\", \"4821\": \"电报服务\", \"4899\": \"电缆及其他收费电视服务\", \"4900\": \"公用事业——电、气、卫生、水\", \"4011\": \"铁路运输\", \"4214\": \"汽车、卡车运输—短途/长途，搬运与仓储公司，本地送货\", \"4225\": \"公共仓库—农产品、冷冻食品、家用货物的存储\", \"4468\": \"港口，海运服务/设备供应\", \"4582\": \"机场、私人机场、航空集散站\", \"4829\": \"电汇和汇票、资金划转\", \"5013\": \"摩托车用品和新部件\", \"5021\": \"办公和商业家具\", \"5039\": \"建筑材料—未包括在其他类别之中的\", \"5044\": \"办公、照相、影印、缩微拍摄设备\", \"5045\": \"计算机及其辅助设备，软件\", \"5046\": \"商业设备—未包括在其他类别之中的\", \"5047\": \"牙科/实验室/医学/眼科医院的设备和用品\", \"5051\": \"金属服务中心或办公室\", \"5065\": \"电子零件和设备\", \"5072\": \"五金器具设备和用品\", \"5074\": \"管道和供暖设备与用品\", \"5085\": \"工业用品—未包括在其他类别之中的\", \"5094\": \"宝石和金属，手表和珠宝\", \"5099\": \"耐用品—未包括在其他类别之中的\", \"5111\": \"文具、办公用品、打印纸和书写纸\", \"5122\": \"药品、药品经营者、药剂商的各种杂物\", \"5131\": \"布匹、小饰物、其他纺织品\", \"5137\": \"男女制服、儿童制服、商业服装\", \"5139\": \"商业鞋类\", \"5169\": \"化学及合成物—未包括在其他类别之中的\", \"5172\": \"石油和石油产品\", \"5192\": \"书籍、期刊、报纸\", \"5193\": \"种花用品、出圃苗、花卉\", \"5198\": \"油漆、清漆，及相关用品\", \"5199\": \"非耐用品—未包括在其他类别之中的\", \"5200\": \"家庭日用品大商店\", \"5231\": \"玻璃、油彩、墙纸店\", \"5251\": \"五金器具店\", \"5261\": \"草地和花园用品店，包括苗圃\", \"5271\": \"活动房屋经营者\", \"5300\": \"批发俱乐部\", \"5309\": \"免税店\", \"5310\": \"打折店\", \"5311\": \"百货公司\", \"5331\": \"杂货铺\", \"5399\": \"各式各样的日用商品店\", \"5411\": \"食品杂货店、超级市场\", \"5422\": \"冷冻、仓储肉的供应者\", \"5441\": \"蜜饯、坚果、糖果店\", \"5451\": \"奶制品商店\", \"5462\": \"面包店\", \"5499\": \"各式各样的食品店——便利店、专业店\", \"5511\": \"汽车和卡车（新车或二手车）交易商——销售、服务、修理、零部件、租赁\", \"5521\": \"汽车和卡车（只限于二手车）交易商—销售、服务、修理、零部件、租赁\", \"5531\": \"汽车商店、家庭用品商店\", \"5532\": \"汽车轮胎店\", \"5533\": \"汽车零部件店\", \"5541\": \"加油站（有或无辅助服务）\", \"5542\": \"自动售油机\", \"5561\": \"野营挂车、娱乐和公用拖车\", \"5571\": \"摩托车商店和经营者\", \"5592\": \"旅行房车经营者\", \"5598\": \"雪上汽车经营商\", \"5611\": \"男士、男童服装及搭配物\", \"5621\": \"女式成衣\", \"5631\": \"女式搭配物和特殊商品店\", \"5641\": \"儿童和婴儿服装店\", \"5651\": \"家庭服装店\", \"5655\": \"运动服、骑服店\", \"5661\": \"鞋店\", \"5681\": \"毛皮商和毛皮店\", \"5691\": \"男式和女式服装店\", \"5697\": \"裁缝、针线活、修补、服装修改\", \"5698\": \"假发与男子假发店\", \"5699\": \"搭配物和服装店——各式各样的\", \"5712\": \"家具、家用装饰品、设备店及制造商（不包括电器）\", \"5713\": \"地板覆盖物商店\", \"5714\": \"帏帐、窗户覆盖物、室内装潢商店\", \"5718\": \"火炉、火炉屏风、相关附属设备的商店\", \"5719\": \"各式各样的家用设备店\", \"5722\": \"家用器械店\", \"5732\": \"电器店\", \"5733\": \"音乐商店——乐器、钢琴、活页乐谱\", \"5734\": \"计算机软件店\", \"5735\": \"音像店\", \"5811\": \"酒宴承办人\", \"5812\": \"公共饮食行业、餐馆\", \"5813\": \"饮酒的地方（酒精饮料）—酒吧、酒馆、夜总会、鸡尾酒会、迪斯科舞厅\", \"5814\": \"快餐店\", \"5912\": \"药店\", \"5921\": \"酒类零售店——啤酒、葡萄酒和酒精饮料\", \"5931\": \"二手店\", \"5932\": \"古董店——出售、修理、修复\", \"5933\": \"抵押店\", \"5935\": \"打捞救助场\", \"5937\": \"古文物复制店\", \"5940\": \"自行车店——出售和服务\", \"5941\": \"运动品店\", \"5942\": \"书店\", \"5943\": \"文具、办公室和学校用品店\", \"5944\": \"珠宝、钟表、银器店\", \"5945\": \"业余爱好、玩具、游戏店\", \"5946\": \"相机和照相用品店\", \"5947\": \"礼品、卡片、新奇品、纪念品店\", \"5948\": \"行李箱和皮革制品商店\", \"5949\": \"缝纫、刺绣、纺织物、布匹店\", \"5950\": \"玻璃和水晶器皿店\", \"5962\": \"电话销售——旅游安排服务\", \"5963\": \"挨户访问的销售\", \"5964\": \"直接营销——目录商户\", \"5965\": \"直接营销——目录和零售商户的组合\", \"5966\": \"直接营销——商户主动联系式的电话销售\", \"5967\": \"直接营销——客户主动联系式的电话销售\", \"5968\": \"直接营销——连续的/订阅商\", \"5969\": \"直接营销/直接市场商人—未在其他地方归类\", \"5970\": \"艺术品商店，手工艺品商店\", \"5971\": \"艺术品交易商和画廊\", \"5972\": \"邮票和硬币商店\", \"5973\": \"宗教品商店\", \"5975\": \"助听器—销售、服务、供给店\", \"5976\": \"整形外科商品和医用修复设备\", \"5977\": \"化装品商店\", \"5978\": \"打字机商店—销售、服务和租赁\", \"5983\": \"燃料交易商—燃油、木材、煤炭和液化石油\", \"5992\": \"种花者\", \"5993\": \"雪茄店\", \"5994\": \"报纸交易商及报摊\", \"5995\": \"宠物商店，宠物食品和日用品\", \"5996\": \"游泳池—销售、常用品和服务\", \"5997\": \"电动剃须刀商店—销售和服务\", \"5998\": \"帐篷和雨蓬商店\", \"5999\": \"综合及专业零售店\", \"5211\": \"建筑材料、木材店\", \"5551\": \"船只经销商\", \"5599\": \"各式各样的汽车、飞机、农机具的经销商—未包括在其他类别之中的\", \"5960\": \"直销—保险服务\", \"6010\": \"金融机构—银行柜台服务注：特别限制\", \"6011\": \"金融机构—自动提款机服务\", \"6012\": \"金融机构—产品、服务\", \"6050\": \"准现金—会员金融机构\", \"6051\": \"非金融机构—外汇、汇票(不包括电汇)、临时单据和旅行支票\", \"6211\": \"债券—经纪人和交易商\", \"6513\": \"真实不动产代理商和管理者—租赁\", \"6529\": \"远程存值—会员金融机构\", \"6530\": \"远程存值—商户\", \"6531\": \"支付服务公司—购买项下货币转账\", \"6532\": \"支付服务公司—会员金融机构（支付交易）\", \"6533\": \"支付服务公司—商户（支付交易）\", \"6534\": \"资金划转—会员金融机构\", \"6535\": \"购买代币券—会员金融机构\", \"6300\": \"保险销售，承销和保险费\", \"7011\": \"住房—旅馆、汽车旅馆、游览胜地—其他处未分类\", \"7012\": \"分时\", \"7032\": \"运动和娱乐营地\", \"7033\": \"(家庭拖车)停车场和野营地\", \"7210\": \"干洗、清洁和服装服务\", \"7211\": \"洗衣店服务—家用和商用\", \"7216\": \"干燥清洁器\", \"7217\": \"地毯和室内装潢清洁\", \"7221\": \"照相摄影室\", \"7230\": \"美容和理发店\", \"7251\": \"修鞋店、擦鞋店、洗帽店\", \"7261\": \"殡葬服务和火葬场\", \"7273\": \"约会和护卫活动\", \"7276\": \"税务准备服务\", \"7277\": \"咨询服务—债务，婚姻，个人\", \"7278\": \"购物和售物服务及俱乐部\", \"7296\": \"服装租赁—剧装、制服和正装\", \"7297\": \"按摩室\", \"7298\": \"健康和美容中心\", \"7299\": \"其他个人服务—未在其他地方分类\", \"7338\": \"快印、复制和制作蓝图服务\", \"7339\": \"速记和秘书支持服务\", \"7342\": \"消菌和抗感染服务\", \"7349\": \"清洁和维护，看门服务\", \"7393\": \"侦探机构、保护机构、包括装甲车的安全服务、警犬\", \"7394\": \"设备租赁服务、工具租贷、家具租贷\", \"7395\": \"照片印、扩室\", \"7511\": \"货品停放交易\", \"7512\": \"汽车租赁代理机构\", \"7513\": \"卡车和公用拖车租赁\", \"7519\": \"汽车之家和娱乐通工具租赁\", \"7523\": \"汽车停车场和车库\", \"7531\": \"车身修理店\", \"7534\": \"胎面翻新和修理店\", \"7535\": \"汽车喷漆店\", \"7538\": \"汽车服务店（非经销商）\", \"7542\": \"洗车\", \"7549\": \"牵引支架服务\", \"7622\": \"电子修理店\", \"7623\": \"空调和冰箱修理店\", \"7629\": \"电子和小用具修理店\", \"7631\": \"手表、钟表和宝石修理店\", \"7641\": \"家具—重装椅面、修理、整修表面\", \"7692\": \"焊接修理\", \"7699\": \"多种业务混杂的修理店和相关服务\", \"7832\": \"动画片剧场\", \"7841\": \"录象娱乐带出租店\", \"7911\": \"舞厅、舞蹈房和舞蹈学校\", \"7922\": \"戏剧生产商（动画片除外）票务代理\", \"7929\": \"乐队、管弦乐队和混合性娱乐者—未在其他地方分类\", \"7932\": \"台球和舞池经营者\", \"7933\": \"保龄球\", \"7941\": \"商业运动、专业运动俱乐部、运动场、运动推广商\", \"7991\": \"针对旅游者的表演和展览\", \"7992\": \"公共高尔夫球场\", \"7994\": \"视频游戏中心/设施\", \"7996\": \"游乐园、马戏表演、狂欢节、算命者\", \"7998\": \"水族馆、海洋馆和海豚馆\", \"7999\": \"娱乐服务—未在其他地方分类\", \"7311\": \"广告服务\", \"7321\": \"个人信用报告商\", \"7333\": \"商业摄影、艺术、图形设计\", \"7361\": \"猎头服务商\", \"7372\": \"计算机编程、数据处理、系统整合设计服务\", \"7375\": \"数据检索服务\", \"7379\": \"计算机维修、保养服务—未包括在其他类别之中的\", \"7392\": \"管理、咨询和公关服务\", \"7399\": \"商业服务—未包括在其他类别之中的\", \"7829\": \"动画片、音像制品的生产与发行\", \"7993\": \"视频娱乐游戏设备\", \"7995\": \"赌博交易\", \"7997\": \"俱乐部—乡村俱乐部、会员俱乐部（运动、休闲、体育），私人高尔夫俱乐部\", \"8011\": \"医生及医师—未在其他地方分类\", \"8021\": \"牙医及畸齿矫正医师\", \"8031\": \"整骨疗法家\", \"8041\": \"脊椎指压治疗者\", \"8042\": \"验光师和检眼师\", \"8043\": \"眼镜商、光学商品和眼镜\", \"8049\": \"足病医生和手足病医生\", \"8050\": \"护理和个人照顾设施\", \"8062\": \"医院\", \"8071\": \"医学和牙科实验室\", \"8099\": \"医疗服务、健康实践—未在其他地方分类\", \"8111\": \"律师，法律服务\", \"8211\": \"小学和中学\", \"8220\": \"学院、大学、专业学校和大专\", \"8241\": \"函授学校\", \"8244\": \"商业和文秘学校\", \"8249\": \"贸易和行业学校\", \"8299\": \"学校和教育服务—未在其他地方分类\", \"8351\": \"儿童照料服务\", \"8398\": \"组织，慈善、社会服务\", \"8641\": \"协会—居民、社会、互助会\", \"8651\": \"政治组织\", \"8661\": \"宗教组织\", \"8911\": \"建筑、工程和测量服务\", \"8931\": \"会计、审计和记账服务\", \"8999\": \"专业服务—未包括在其他类别之中的\", \"8675\": \"汽车协会\", \"8699\": \"会员组织—未在其他地方分类\", \"8734\": \"检测实验室（非医学）\", \"9211\": \"法庭费用，包括赡养费和孩子抚养费\", \"9222\": \"罚款\", \"9223\": \"保证金和保释金付款\", \"9311\": \"税务支付\", \"9399\": \"政府服务—未在其他地方分类\", \"9402\": \"邮政服务—仅限于政府\", \"9751\": \"英国超市\", \"9752\": \"英国汽油站\", \"9405\": \"政府内部购买\"}");
        for (String key : jsonObject.keySet()) {
            mccMap.put(Integer.valueOf(key), jsonObject.getString(key));
        }
        for (int i = 3000; i <= 3299; i++) {
            mccMap.put(i, "航空公司");
        }
        for (int i = 3351; i <= 3441; i++) {
            mccMap.put(i, "汽车租赁公司");
        }
        for (int i = 3501; i <= 3799; i++) {
            mccMap.put(i, "住宿——旅馆、酒店");
        }
    }


}
